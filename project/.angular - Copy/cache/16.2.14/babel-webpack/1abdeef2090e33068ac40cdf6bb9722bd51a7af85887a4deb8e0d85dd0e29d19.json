{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomepageComponent = class HomepageComponent {\n  constructor(serviceService) {\n    this.serviceService = serviceService;\n    this.firstName = '';\n    this.lastName = '';\n    this.email = '';\n    this.mobileNo = '';\n    this.age = '';\n    this.state = '';\n    this.country = '';\n    this.address = '';\n    this.selectedFile = null;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  getPreviewUrl() {\n    if (!this.selectedFile) {\n      return null;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.selectedFile);\n    reader.onload = () => {\n      return reader.result;\n    };\n    // Ensure there's a return statement in case the onload event hasn't fired yet\n    return null;\n  }\n  saveForm() {\n    const formData = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      mobileNo: this.mobileNo,\n      age: this.age,\n      state: this.state,\n      country: this.country,\n      address: this.address,\n      photo: this.selectedFile ? this.selectedFile : null\n    };\n    console.log('Form submitted:', formData);\n    // Reset form fields after successful submission\n    this.resetForm();\n    this.serviceService.addUser(formData).subscribe(response => {\n      console.log('User added successfully:', response);\n      this.resetForm();\n    }, error => {\n      console.error('Error adding user:', error);\n    });\n  }\n  resetForm() {\n    this.firstName = '';\n    this.lastName = '';\n    this.email = '';\n    this.mobileNo = '';\n    this.age = '';\n    this.state = '';\n    this.country = '';\n    this.address = '';\n  }\n};\nHomepageComponent = __decorate([Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})], HomepageComponent);","map":{"version":3,"names":["Component","HomepageComponent","constructor","serviceService","firstName","lastName","email","mobileNo","age","state","country","address","selectedFile","onFileSelected","event","target","files","getPreviewUrl","reader","FileReader","readAsDataURL","onload","result","saveForm","formData","photo","console","log","resetForm","addUser","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mahes\\Downloads\\project (1)\\project\\src\\app\\homepage\\homepage.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ServiceService } from '../service.service';\n\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent {\n  firstName: string = '';\n  lastName: string = '';\n  email: string = '';\n  mobileNo: string = '';\n  age: string = '';\n  state: string = '';\n  country: string = '';\n  address: string = '';\n\n  constructor(private serviceService: ServiceService) { }\n  selectedFile: File | null = null;\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0] as File;\n  }\n\n  getPreviewUrl(): string | ArrayBuffer | null {\n    if (!this.selectedFile) {\n      return null;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(this.selectedFile);\n    reader.onload = () => {\n      return reader.result;\n    };\n    // Ensure there's a return statement in case the onload event hasn't fired yet\n    return null;\n  }\n  \n  \n  \n  saveForm(): void {\n    const formData = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      mobileNo: this.mobileNo,\n      age: this.age,\n      state: this.state,\n      country: this.country,\n      address: this.address,\n      photo: this.selectedFile ? this.selectedFile : null\n    };\n    console.log('Form submitted:', formData);\n\n    // Reset form fields after successful submission\n    this.resetForm();\n\n    \n\n    this.serviceService.addUser(formData).subscribe(\n      response => {\n        console.log('User added successfully:', response);\n        this.resetForm();\n      },\n      error => {\n        console.error('Error adding user:', error);\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.firstName = '';\n    this.lastName = '';\n    this.email = '';\n    this.mobileNo = '';\n    this.age = '';\n    this.state = '';\n    this.country = '';\n    this.address = '';\n  }\n  \n}\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IATlC,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,OAAO,GAAW,EAAE;IAGpB,KAAAC,YAAY,GAAgB,IAAI;EADsB;EAGtDC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACF,YAAY,GAAGE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAS;EACnD;EAEAC,aAAaA,CAAA;IACX,IAAI,CAAC,IAAI,CAACL,YAAY,EAAE;MACtB,OAAO,IAAI;;IAEb,MAAMM,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,aAAa,CAAC,IAAI,CAACR,YAAY,CAAC;IACvCM,MAAM,CAACG,MAAM,GAAG,MAAK;MACnB,OAAOH,MAAM,CAACI,MAAM;IACtB,CAAC;IACD;IACA,OAAO,IAAI;EACb;EAIAC,QAAQA,CAAA;IACN,MAAMC,QAAQ,GAAG;MACfpB,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBc,KAAK,EAAE,IAAI,CAACb,YAAY,GAAG,IAAI,CAACA,YAAY,GAAG;KAChD;IACDc,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC;IAExC;IACA,IAAI,CAACI,SAAS,EAAE;IAIhB,IAAI,CAACzB,cAAc,CAAC0B,OAAO,CAACL,QAAQ,CAAC,CAACM,SAAS,CAC7CC,QAAQ,IAAG;MACTL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,QAAQ,CAAC;MACjD,IAAI,CAACH,SAAS,EAAE;IAClB,CAAC,EACDI,KAAK,IAAG;MACNN,OAAO,CAACM,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EAEAJ,SAASA,CAAA;IACP,IAAI,CAACxB,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,GAAG,GAAG,EAAE;IACb,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB;CAED;AAzEYV,iBAAiB,GAAAgC,UAAA,EAL7BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWnC,iBAAiB,CAyE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}